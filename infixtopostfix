// This is a example problem to the concept of stack to convert infix notation to postfix notation. 
// The solution is taken as a reference from the solution of infixtopostfix from geeksforgeeks

import java.util.Stack;
import java.util.Scanner;
class test2
{
static int checkprec(char ch)
{
switch(ch)
{
case '+':
case '-':
  return 1;

case '*':
case '/':
  return 2;

case '^':
  return 3;
}
return -1;
}

static String infixtopostfix(String exp)
{

String result = new String("");

Stack<Character> stack = new Stack<Character>();
for(int i=0;i<exp.length(); i++)
{
char c = exp.charAt(i);

if(Character.isLetterOrDigit(c))
result+=c;

else if(c=='(')
stack.push(c);

else if(c==')')
{
while(!stack.isEmpty() && stack.peek()!='(')
result+=stack.pop();

if(!stack.isEmpty() && stack.peek()!='(')
return "Invalid Expression";

else 
stack.pop();
}
else
{
while(!stack.isEmpty() && checkprec(c) <= checkprec(Stack.peek()))
result+= stack.pop();
stack.push(c);
}
}
while(!stack.isEmpty())
result+= stack.pop();

return result;
}
public static void main(String[] args)
{
Scanner sc = new Scanner(System.in);
String exp=sc.nextLine();
System.out.println(infixtopostfix(exp));
}
}
